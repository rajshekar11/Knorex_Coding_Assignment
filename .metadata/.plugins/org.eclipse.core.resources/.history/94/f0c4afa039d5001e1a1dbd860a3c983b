package com.knorex.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class ParkingLot {

	private int numberOfFloors;
	private int spacesPerFloors;
	List<Floor> floors;
	List<VehicleToken> tokens;
	
	public ParkingLot() {
		// TODO Auto-generated constructor stub
	}

	public int getNumberOfFloors() {
		return numberOfFloors;
	}

	public void setNumberOfFloors(int numberOfFloors) {
		this.numberOfFloors = numberOfFloors;
	}

	public int getSpacesPerFloors() {
		return spacesPerFloors;
	}

	public void setSpacesPerFloors(int spacesPerFloors) {
		this.spacesPerFloors = spacesPerFloors;
	}

	public List<Floor> getFloors() {
		return floors;
	}

	public void setFloors(List<Floor> floors) {
		this.floors = floors;
	}

	public ParkingLot(int numberOfFloors, int spacesPerFloors) {
		super();
		this.numberOfFloors = numberOfFloors;
		this.spacesPerFloors = spacesPerFloors;
		this.floors = new ArrayList<>();
		this.tokens=new ArrayList<>();
		for(int i=1;i<=numberOfFloors;i++) {
			floors.add(new Floor(i, spacesPerFloors, spacesPerFloors, spacesPerFloors));
		}
	}
	
	public void addVehicle(String registrationNumber, String color, VehicleType type) {
		for(Floor floor:floors) {
			for(VehicleSpace space:floor.spaces) {
				if(space.isAvailability() && space.getVehicleType().equals(type)) {
					space.setAvailability(false);
					tokens.add(new VehicleToken(space.getSpaceNumber(),floor.getFloorNumber(),registrationNumber, LocalDateTime.now()));
					System.out.println("Vehicle Parked Successfully regNumber"+registrationNumber+" floor Number: "+floor.getFloorNumber()+" space number: "+space.getSpaceNumber());
					return;
				}
			}
		}
		throw new RuntimeException("Parking is full");
	}
	
	public boolean removeVehicle(int spaceNumber,int floorNumber, LocalDateTime exitTimeStamp) {
	
				for(VehicleToken token:tokens) {
					if(token.getSpaceNumber()==spaceNumber&&token.getFloorNumber()==floorNumber) {
						
					}
		}
	}
	
	
}
